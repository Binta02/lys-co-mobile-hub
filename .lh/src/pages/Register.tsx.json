{
    "sourceFile": "src/pages/Register.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1749067434083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749067629122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,9 @@\n                   }}\r\n                   required\r\n                   className={`pl-10 pr-10 ${passwordError ? \"border-red-500\" : \"\"}`}\r\n                 />\r\n+                </div>\r\n                 {passwordError && (\r\n                   <p className=\"text-xs text-red-500\">\r\n                     Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1 chiffre et 1 caractère spécial.\r\n                   </p>\r\n"
                },
                {
                    "date": 1749067709180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,8 +209,19 @@\n                     className={`pl-10 pr-10 ${\r\n                       passwordError ? \"border-red-500\" : \"\"\r\n                     }`}\r\n                   />\r\n+                  <button \r\n+                    type=\"button\" \r\n+                    onClick={togglePasswordVisibility}\r\n+                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\r\n+                  >\r\n+                    {showPassword ? (\r\n+                      <EyeOff className=\"h-4 w-4\" />\r\n+                    ) : (\r\n+                      <Eye className=\"h-4 w-4\" />\r\n+                    )}\r\n+                  </button>\r\n                 </div>\r\n                 {passwordError && (\r\n                   <p className=\"text-xs text-red-500\">\r\n                     Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1\r\n"
                }
            ],
            "date": 1749067434083,
            "name": "Commit-0",
            "content": "\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react';\r\nimport Navbar from '@/components/Navbar';\r\nimport Footer from '@/components/Footer';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { toast } from '@/components/ui/sonner';\r\n\r\nconst Register: React.FC = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const isPasswordValid = (pwd: string) => {\r\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n  return regex.test(pwd);\r\n};\r\n\r\n  // const handleRegister = async (e: React.FormEvent) => {\r\n  //   e.preventDefault();\r\n    \r\n  //   try {\r\n  //     const { data, error } = await supabase.auth.signUp({\r\n  //       email,\r\n  //       password,\r\n  //       options: {\r\n  //         data: {\r\n  //           first_name: firstName,\r\n  //           last_name: lastName\r\n  //         }\r\n  //       }\r\n  //     });\r\n\r\n  //     if (error) {\r\n  //       toast.error('Erreur lors de l\\'inscription', {\r\n  //         description: error.message\r\n  //       });\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (data.user) {\r\n  //       toast.success('Inscription réussie', {\r\n  //         description: 'Vous êtes maintenant inscrit. Bienvenue chez Lys&Co!'\r\n  //       });\r\n  //       navigate('/dashboard');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Registration error:', error);\r\n  //     toast.error('Une erreur inattendue est survenue');\r\n  //   }\r\n  // };\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: firstName,\r\n            last_name: lastName\r\n          }\r\n        }\r\n      });\r\n  \r\n      if (error) {\r\n        if (error.message.includes('already registered') || error.message.includes('Email already in use')) {\r\n          toast.error('Cet email est déjà associé à un compte.', {\r\n            description: 'Essayez de vous connecter ou de réinitialiser votre mot de passe.'\r\n          });\r\n        } else {\r\n          toast.error('Erreur lors de l\\'inscription', {\r\n            description: error.message\r\n          });\r\n        }\r\n        return;\r\n      }\r\n  \r\n      if (data.user) {\r\n        toast.success('Inscription réussie', {\r\n          description: 'Vous êtes maintenant inscrit. Bienvenue chez Lys&Co!'\r\n        });\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      toast.error('Une erreur inattendue est survenue');\r\n    }\r\n  };\r\n  \r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Navbar />\r\n      \r\n      <main className=\"flex-1 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gray-50\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardHeader className=\"space-y-1\">\r\n            <CardTitle className=\"text-2xl font-bold text-center\">Créer un compte</CardTitle>\r\n            <CardDescription className=\"text-center\">\r\n              Inscrivez-vous pour accéder à nos services\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form onSubmit={handleRegister} className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"firstName\">Prénom</Label>\r\n                  <div className=\"relative\">\r\n                    <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n                    <Input \r\n                      id=\"firstName\" \r\n                      placeholder=\"Prénom\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                      required\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"lastName\">Nom</Label>\r\n                  <Input \r\n                    id=\"lastName\" \r\n                    placeholder=\"Nom\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <div className=\"relative\">\r\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n                  <Input \r\n                    id=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"exemple@email.com\" \r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    className=\"pl-10\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"password\">Mot de passe</Label>\r\n                <div className=\"relative\">\r\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n                  {/* <Input \r\n                    id=\"password\" \r\n                    type={showPassword ? \"text\" : \"password\"} \r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    className=\"pl-10 pr-10\"\r\n                  />\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={togglePasswordVisibility}\r\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-4 w-4\" />\r\n                    ) : (\r\n                      <Eye className=\"h-4 w-4\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  Le mot de passe doit contenir au moins 8 caractères, une majuscule, une minuscule et un chiffre\r\n                </p> */}\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                    setPasswordError(!isPasswordValid(e.target.value));\r\n                  }}\r\n                  required\r\n                  className={`pl-10 pr-10 ${passwordError ? \"border-red-500\" : \"\"}`}\r\n                />\r\n                {passwordError && (\r\n                  <p className=\"text-xs text-red-500\">\r\n                    Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1 chiffre et 1 caractère spécial.\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <Button type=\"submit\" className=\"w-full bg-lysco-pink text-white hover:bg-opacity-90\">\r\n                S'inscrire\r\n              </Button>\r\n            </form>\r\n          </CardContent>\r\n          <CardFooter className=\"flex flex-col space-y-4\">\r\n            <div className=\"text-center text-sm\">\r\n              Déjà un compte?{' '}\r\n              <Link to=\"/login\" className=\"text-lysco-turquoise hover:underline\">\r\n                Se connecter\r\n              </Link>\r\n            </div>\r\n          </CardFooter>\r\n        </Card>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"
        }
    ]
}