{
    "sourceFile": "src/pages/Dashboard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747586728327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747586802087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,465 +1,110 @@\n-\r\n-// import React, { useEffect, useState } from 'react';\r\n-// import { useNavigate } from 'react-router-dom';\r\n-// import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n-// import { Button } from '@/components/ui/button';\r\n-// import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\n-// import { Badge } from '@/components/ui/badge';\r\n-// import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '@/components/ui/table';\r\n-// import { useUserData } from '@/hooks/useUserData';\r\n-// import { supabase } from '@/integrations/supabase/client';\r\n-// import { toast } from '@/components/ui/use-toast';\r\n-// import Navbar from '@/components/Navbar';\r\n-// import Footer from '@/components/Footer';\r\n-// import ProfileEditForm from '@/components/dashboard/ProfileEditForm';\r\n-// import { format } from 'date-fns';\r\n-// import { fr } from 'date-fns/locale';\r\n-// import { Calendar, User, ShoppingCart, List } from 'lucide-react';\r\n-\r\n-\r\n-// const Dashboard: React.FC = () => {\r\n-//   const navigate = useNavigate();\r\n-//   const [loading, setLoading] = useState(true);\r\n-//   const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n-  \r\n-//   const { \r\n-//     profile, \r\n-//     domiciliation, \r\n-//     userServices, \r\n-//     loading: userDataLoading, \r\n-//     updateProfile,\r\n-//     error\r\n-//   } = useUserData();\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkUser = async () => {\r\n-//       try {\r\n-//         const { data: { session } } = await supabase.auth.getSession();\r\n-        \r\n-//         if (!session) {\r\n-//           toast({\r\n-//             title: \"Accès non autorisé\",\r\n-//             description: \"Veuillez vous connecter pour accéder à votre tableau de bord\",\r\n-//             variant: \"destructive\"\r\n-//           });\r\n-//           navigate('/login');\r\n-//           return;\r\n-//         }\r\n-//       } catch (error) {\r\n-//         console.error('Error checking auth status:', error);\r\n-//         navigate('/login');\r\n-//       } finally {\r\n-//         setLoading(false);\r\n-//       }\r\n-//     };\r\n-\r\n-//     checkUser();\r\n-\r\n-//     const { data: authListener } = supabase.auth.onAuthStateChange(\r\n-//       (event, session) => {\r\n-//         if (event === 'SIGNED_OUT') {\r\n-//           navigate('/login');\r\n-//         }\r\n-//       }\r\n-//     );\r\n-\r\n-//     return () => {\r\n-//       authListener.subscription.unsubscribe();\r\n-//     };\r\n-//   }, [navigate]);\r\n-\r\n-//   if (loading || userDataLoading) {\r\n-//     return (\r\n-//       <div className=\"flex items-center justify-center h-screen\">\r\n-//         <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-lysco-turquoise\"></div>\r\n-//       </div>\r\n-//     );\r\n-//   }\r\n-\r\n-//   if (error) {\r\n-//     return (\r\n-//       <div className=\"flex flex-col items-center justify-center h-screen\">\r\n-//         <p className=\"text-red-500 text-xl mb-4\">Une erreur est survenue lors du chargement de vos données</p>\r\n-//         <Button onClick={() => navigate('/login')}>Retourner à l'accueil</Button>\r\n-//       </div>\r\n-//     );\r\n-//   }\r\n-\r\n-//   const formatDate = (dateString: string): string => {\r\n-//     try {\r\n-//       const date = new Date(dateString);\r\n-//       return format(date, 'dd/MM/yyyy', { locale: fr });\r\n-//     } catch (e) {\r\n-//       return dateString;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const getStatusBadge = (status: string) => {\r\n-//     if (status === 'active') {\r\n-//       return <Badge className=\"bg-green-500\">Actif</Badge>;\r\n-//     } else if (status === 'option') {\r\n-//       return <Badge className=\"bg-amber-500\">En option</Badge>;\r\n-//     } else if (status === 'pending') {\r\n-//       return <Badge className=\"bg-blue-500\">En attente</Badge>;\r\n-//     } else {\r\n-//       return <Badge className=\"bg-gray-500\">{status}</Badge>;\r\n-//     }\r\n-//   };\r\n-\r\n-//   if (isEditingProfile) {\r\n-//     return (\r\n-//       <div className=\"flex flex-col min-h-screen\">\r\n-//         <Navbar />\r\n-//         <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n-//           <ProfileEditForm \r\n-//             profile={profile} \r\n-//             onUpdate={updateProfile} \r\n-//             onCancel={() => setIsEditingProfile(false)} \r\n-//           />\r\n-//         </main>\r\n-//         <Footer />\r\n-//       </div>\r\n-//     );\r\n-//   }\r\n-\r\n-//   // Filtrer les services par catégorie\r\n-//   const domiciliationServices = userServices.filter(service => service.category === 'domiciliation');\r\n-//   const adminServices = userServices.filter(service => service.category === 'admin');\r\n-//   const marketingServices = userServices.filter(service => service.category === 'marketing');\r\n-//   const complementaryServices = userServices.filter(service => service.category === 'complementary');\r\n-\r\n-//   return (\r\n-//     <div className=\"flex flex-col min-h-screen\">\r\n-//       <Navbar />\r\n-      \r\n-//       <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n-//         <div className=\"mb-8\">\r\n-//           <h1 className=\"text-3xl font-bold\">Tableau de bord</h1>\r\n-//           <p className=\"text-gray-600\">Bienvenue sur votre espace personnel Lys&Co, {profile?.first_name || profile?.email}</p>\r\n-//         </div>\r\n-        \r\n-//         <div className=\"grid grid-cols-1 gap-8\">\r\n-//           {/* Profil utilisateur */}\r\n-//           <Card>\r\n-//             <CardHeader className=\"flex flex-row items-center justify-between\">\r\n-//               <CardTitle className=\"text-xl flex items-center\">\r\n-//                 <User className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n-//                 Mon Profil\r\n-//               </CardTitle>\r\n-//               <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditingProfile(true)}>\r\n-//                 Modifier mon profil\r\n-//               </Button>\r\n-//             </CardHeader>\r\n-//             <CardContent>\r\n-//               <div className=\"flex flex-col md:flex-row gap-6\">\r\n-//                 <div className=\"flex-1 space-y-3\">\r\n-//                   <div>\r\n-//                     <p className=\"text-sm text-gray-600\">Nom</p>\r\n-//                     <p className=\"font-medium\">{profile?.first_name} {profile?.last_name}</p>\r\n-//                   </div>\r\n-//                   <div>\r\n-//                     <p className=\"text-sm text-gray-600\">Email</p>\r\n-//                     <p className=\"font-medium\">{profile?.email}</p>\r\n-//                   </div>\r\n-//                 </div>\r\n-//                 <div className=\"flex-1 space-y-3\">\r\n-//                   <div>\r\n-//                     <p className=\"text-sm text-gray-600\">Entreprise</p>\r\n-//                     <p className=\"font-medium\">{profile?.company_name || 'Non renseigné'}</p>\r\n-//                   </div>\r\n-//                   <div>\r\n-//                     <p className=\"text-sm text-gray-600\">Téléphone</p>\r\n-//                     <p className=\"font-medium\">{profile?.phone || 'Non renseigné'}</p>\r\n-//                   </div>\r\n-//                 </div>\r\n-//               </div>\r\n-//             </CardContent>\r\n-//           </Card>\r\n-\r\n-//           {/* Domiciliation */}\r\n-//           {domiciliation && (\r\n-//             <Card>\r\n-//               <CardHeader>\r\n-//                 <CardTitle className=\"text-xl flex items-center\">\r\n-//                   <Calendar className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n-//                   Domiciliation\r\n-//                 </CardTitle>\r\n-//               </CardHeader>\r\n-//               <CardContent>\r\n-//                 <div className=\"mb-4\">\r\n-//                   <p className=\"text-sm text-gray-600\">Adresse</p>\r\n-//                   <p className=\"font-medium\">{domiciliation.address}</p>\r\n-//                 </div>\r\n-//                 <div className=\"flex flex-col md:flex-row gap-6\">\r\n-//                   <div className=\"flex-1 space-y-3\">\r\n-//                     <div>\r\n-//                       <p className=\"text-sm text-gray-600\">Statut</p>\r\n-//                       <p className={`font-medium ${\r\n-//                         domiciliation.status === 'active' ? 'text-green-600' : \r\n-//                         domiciliation.status === 'pending' ? 'text-amber-600' : 'text-gray-600'\r\n-//                       }`}>\r\n-//                         {domiciliation.status === 'active' ? 'Actif' : \r\n-//                          domiciliation.status === 'pending' ? 'En attente' : 'Inactif'}\r\n-//                       </p>\r\n-//                     </div>\r\n-//                     {domiciliation.renewal_date && (\r\n-//                       <div>\r\n-//                         <p className=\"text-sm text-gray-600\">Renouvellement</p>\r\n-//                         <p className=\"font-medium\">{formatDate(domiciliation.renewal_date)}</p>\r\n-//                       </div>\r\n-//                     )}\r\n-//                   </div>\r\n-//                   <div className=\"flex-1 space-y-3\">\r\n-//                     {domiciliation.plan_type && (\r\n-//                       <div>\r\n-//                         <p className=\"text-sm text-gray-600\">Type de plan</p>\r\n-//                         <p className=\"font-medium\">{domiciliation.plan_type}</p>\r\n-//                       </div>\r\n-//                     )}\r\n-//                     {domiciliation.duration && (\r\n-//                       <div>\r\n-//                         <p className=\"text-sm text-gray-600\">Durée</p>\r\n-//                         <p className=\"font-medium\">{domiciliation.duration}</p>\r\n-//                       </div>\r\n-//                     )}\r\n-//                   </div>\r\n-//                 </div>\r\n-//               </CardContent>\r\n-//             </Card>\r\n-//           )}\r\n-\r\n-//           {/* Services achetés */}\r\n-//           <Card>\r\n-//             <CardHeader>\r\n-//               <CardTitle className=\"text-xl flex items-center\">\r\n-//                 <ShoppingCart className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n-//                 Services achetés\r\n-//               </CardTitle>\r\n-//             </CardHeader>\r\n-//             <CardContent>\r\n-//               {userServices.length > 0 ? (\r\n-//                 <div className=\"space-y-6\">\r\n-//                   {domiciliationServices.length > 0 && (\r\n-//                     <div>\r\n-//                       <h3 className=\"font-medium mb-2\">Services de domiciliation</h3>\r\n-//                       <Table>\r\n-//                         <TableHeader>\r\n-//                           <TableRow>\r\n-//                             <TableHead>Service</TableHead>\r\n-//                             <TableHead>Statut</TableHead>\r\n-//                             <TableHead>Prix</TableHead>\r\n-//                           </TableRow>\r\n-//                         </TableHeader>\r\n-//                         <TableBody>\r\n-//                           {domiciliationServices.map(service => (\r\n-//                             <TableRow key={service.id}>\r\n-//                               <TableCell>{service.name}</TableCell>\r\n-//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n-//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n-//                             </TableRow>\r\n-//                           ))}\r\n-//                         </TableBody>\r\n-//                       </Table>\r\n-//                     </div>\r\n-//                   )}\r\n-\r\n-//                   {adminServices.length > 0 && (\r\n-//                     <div>\r\n-//                       <h3 className=\"font-medium mb-2\">Services administratifs</h3>\r\n-//                       <Table>\r\n-//                         <TableHeader>\r\n-//                           <TableRow>\r\n-//                             <TableHead>Service</TableHead>\r\n-//                             <TableHead>Statut</TableHead>\r\n-//                             <TableHead>Prix</TableHead>\r\n-//                           </TableRow>\r\n-//                         </TableHeader>\r\n-//                         <TableBody>\r\n-//                           {adminServices.map(service => (\r\n-//                             <TableRow key={service.id}>\r\n-//                               <TableCell>{service.name}</TableCell>\r\n-//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n-//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n-//                             </TableRow>\r\n-//                           ))}\r\n-//                         </TableBody>\r\n-//                       </Table>\r\n-//                     </div>\r\n-//                   )}\r\n-\r\n-//                   {marketingServices.length > 0 && (\r\n-//                     <div>\r\n-//                       <h3 className=\"font-medium mb-2\">Services marketing</h3>\r\n-//                       <Table>\r\n-//                         <TableHeader>\r\n-//                           <TableRow>\r\n-//                             <TableHead>Service</TableHead>\r\n-//                             <TableHead>Statut</TableHead>\r\n-//                             <TableHead>Prix</TableHead>\r\n-//                           </TableRow>\r\n-//                         </TableHeader>\r\n-//                         <TableBody>\r\n-//                           {marketingServices.map(service => (\r\n-//                             <TableRow key={service.id}>\r\n-//                               <TableCell>{service.name}</TableCell>\r\n-//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n-//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n-//                             </TableRow>\r\n-//                           ))}\r\n-//                         </TableBody>\r\n-//                       </Table>\r\n-//                     </div>\r\n-//                   )}\r\n-\r\n-//                   {complementaryServices.length > 0 && (\r\n-//                     <div>\r\n-//                       <h3 className=\"font-medium mb-2\">Services complémentaires</h3>\r\n-//                       <Table>\r\n-//                         <TableHeader>\r\n-//                           <TableRow>\r\n-//                             <TableHead>Service</TableHead>\r\n-//                             <TableHead>Statut</TableHead>\r\n-//                             <TableHead>Prix</TableHead>\r\n-//                           </TableRow>\r\n-//                         </TableHeader>\r\n-//                         <TableBody>\r\n-//                           {complementaryServices.map(service => (\r\n-//                             <TableRow key={service.id}>\r\n-//                               <TableCell>{service.name}</TableCell>\r\n-//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n-//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n-//                             </TableRow>\r\n-//                           ))}\r\n-//                         </TableBody>\r\n-//                       </Table>\r\n-//                     </div>\r\n-//                   )}\r\n-//                 </div>\r\n-//               ) : (\r\n-//                 <div className=\"text-center py-6\">\r\n-//                   <p className=\"text-gray-500\">Vous n'avez pas encore de services actifs.</p>\r\n-//                   <Button variant=\"outline\" className=\"mt-4\" asChild>\r\n-//                     <a href=\"/domiciliation\">Voir nos offres</a>\r\n-//                   </Button>\r\n-//                 </div>\r\n-//               )}\r\n-//             </CardContent>\r\n-//           </Card>\r\n-\r\n-//           {/* TODO: Ajouter la section Réservations quand celle-ci sera implémentée */}\r\n-//         </div>\r\n-//       </main>\r\n-      \r\n-//       <Footer />\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Dashboard;\r\n // src/components/dashboard/Dashboard.tsx\r\n-import React, { useEffect, useState } from 'react'\r\n-import { useNavigate } from 'react-router-dom'\r\n-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\n-import { Button } from '@/components/ui/button'\r\n-import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\r\n-import { Badge } from '@/components/ui/badge'\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n import {\r\n   Table,\r\n   TableHeader,\r\n   TableBody,\r\n   TableRow,\r\n   TableHead,\r\n   TableCell,\r\n-} from '@/components/ui/table'\r\n-import { useUserData } from '@/hooks/useUserData'\r\n-import { supabase } from '@/integrations/supabase/client'\r\n-import { toast } from '@/components/ui/use-toast'\r\n-import Navbar from '@/components/Navbar'\r\n-import Footer from '@/components/Footer'\r\n-import ProfileEditForm from '@/components/dashboard/ProfileEditForm'\r\n-import { format } from 'date-fns'\r\n-import { fr } from 'date-fns/locale'\r\n-import { Calendar, User, ShoppingCart } from 'lucide-react'\r\n-import DashboardOverview from '@/components/dashboard/DashboardOverview'\r\n+} from \"@/components/ui/table\";\r\n+import { useUserData } from \"@/hooks/useUserData\";\r\n+import { supabase } from \"@/integrations/supabase/client\";\r\n+import { toast } from \"@/components/ui/use-toast\";\r\n+import Navbar from \"@/components/Navbar\";\r\n+import Footer from \"@/components/Footer\";\r\n+import ProfileEditForm from \"@/components/dashboard/ProfileEditForm\";\r\n+import { format } from \"date-fns\";\r\n+import { fr } from \"date-fns/locale\";\r\n+import { Calendar, User, ShoppingCart } from \"lucide-react\";\r\n+import DashboardOverview from \"@/components/dashboard/DashboardOverview\";\r\n \r\n const Dashboard: React.FC = () => {\r\n-  const navigate = useNavigate()\r\n-  const [loading, setLoading] = useState(true)\r\n-  const [isEditingProfile, setIsEditingProfile] = useState(false)\r\n+  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n \r\n   const {\r\n     profile,\r\n     domiciliation,\r\n     userServices,\r\n     loading: userDataLoading,\r\n     updateProfile,\r\n     error,\r\n-  } = useUserData()\r\n+  } = useUserData();\r\n \r\n   // Vérification de session Supabase\r\n   useEffect(() => {\r\n     const checkUser = async () => {\r\n       const {\r\n         data: { session },\r\n-      } = await supabase.auth.getSession()\r\n+      } = await supabase.auth.getSession();\r\n       if (!session) {\r\n         toast({\r\n-          title: 'Accès non autorisé',\r\n-          description: 'Veuillez vous connecter pour accéder à votre tableau de bord',\r\n-          variant: 'destructive',\r\n-        })\r\n-        navigate('/login')\r\n+          title: \"Accès non autorisé\",\r\n+          description:\r\n+            \"Veuillez vous connecter pour accéder à votre tableau de bord\",\r\n+          variant: \"destructive\",\r\n+        });\r\n+        navigate(\"/login\");\r\n       }\r\n-      setLoading(false)\r\n-    }\r\n-    checkUser()\r\n+      setLoading(false);\r\n+    };\r\n+    checkUser();\r\n     const { data: authListener } = supabase.auth.onAuthStateChange((event) => {\r\n-      if (event === 'SIGNED_OUT') navigate('/login')\r\n-    })\r\n+      if (event === \"SIGNED_OUT\") navigate(\"/login\");\r\n+    });\r\n     return () => {\r\n-      authListener.subscription.unsubscribe()\r\n-    }\r\n-  }, [navigate])\r\n+      authListener.subscription.unsubscribe();\r\n+    };\r\n+  }, [navigate]);\r\n \r\n   if (loading || userDataLoading) {\r\n     return (\r\n       <div className=\"flex items-center justify-center h-screen\">\r\n         <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-lysco-turquoise\" />\r\n       </div>\r\n-    )\r\n+    );\r\n   }\r\n   if (error) {\r\n     return (\r\n       <div className=\"flex flex-col items-center justify-center h-screen\">\r\n         <p className=\"text-red-500 text-xl mb-4\">\r\n           Une erreur est survenue lors du chargement de vos données\r\n         </p>\r\n-        <Button onClick={() => navigate('/login')}>Retourner à l’accueil</Button>\r\n+        <Button onClick={() => navigate(\"/login\")}>\r\n+          Retourner à l’accueil\r\n+        </Button>\r\n       </div>\r\n-    )\r\n+    );\r\n   }\r\n \r\n   const formatDate = (dateString: string) => {\r\n     try {\r\n-      return format(new Date(dateString), 'dd/MM/yyyy', { locale: fr })\r\n+      return format(new Date(dateString), \"dd/MM/yyyy\", { locale: fr });\r\n     } catch {\r\n-      return dateString\r\n+      return dateString;\r\n     }\r\n-  }\r\n+  };\r\n \r\n   const getStatusBadge = (status: string) => {\r\n     switch (status) {\r\n-      case 'active':\r\n-        return <Badge className=\"bg-green-500\">Actif</Badge>\r\n-      case 'pending':\r\n-        return <Badge className=\"bg-blue-500\">En attente</Badge>\r\n-      case 'option':\r\n-        return <Badge className=\"bg-amber-500\">En option</Badge>\r\n+      case \"active\":\r\n+        return <Badge className=\"bg-green-500\">Actif</Badge>;\r\n+      case \"pending\":\r\n+        return <Badge className=\"bg-blue-500\">En attente</Badge>;\r\n+      case \"option\":\r\n+        return <Badge className=\"bg-amber-500\">En option</Badge>;\r\n       default:\r\n-        return <Badge className=\"bg-gray-500\">{status}</Badge>\r\n+        return <Badge className=\"bg-gray-500\">{status}</Badge>;\r\n     }\r\n-  }\r\n+  };\r\n \r\n   if (isEditingProfile) {\r\n     return (\r\n       <div className=\"flex flex-col min-h-screen\">\r\n@@ -472,16 +117,22 @@\n           />\r\n         </main>\r\n         <Footer />\r\n       </div>\r\n-    )\r\n+    );\r\n   }\r\n \r\n   // Catégorisation des services\r\n-  const domiciliationServices = userServices.filter((s) => s.category === 'domiciliation')\r\n-  const adminServices = userServices.filter((s) => s.category === 'admin')\r\n-  const marketingServices = userServices.filter((s) => s.category === 'marketing')\r\n-  const complementaryServices = userServices.filter((s) => s.category === 'complementary')\r\n+  const domiciliationServices = userServices.filter(\r\n+    (s) => s.category === \"domiciliation\"\r\n+  );\r\n+  const adminServices = userServices.filter((s) => s.category === \"admin\");\r\n+  const marketingServices = userServices.filter(\r\n+    (s) => s.category === \"marketing\"\r\n+  );\r\n+  const complementaryServices = userServices.filter(\r\n+    (s) => s.category === \"complementary\"\r\n+  );\r\n \r\n   return (\r\n     <div className=\"flex flex-col min-h-screen\">\r\n       <Navbar />\r\n@@ -494,20 +145,30 @@\n         <Card>\r\n           <CardHeader className=\"flex items-center justify-between\">\r\n             <div className=\"flex items-center space-x-4\">\r\n               <Avatar>\r\n-                {profile?.avatar_url ? (\r\n-                  <AvatarImage src={profile.avatar_url} alt=\"Avatar utilisateur\" />\r\n+                {/* Correction: Utiliser profile.avatarUrl si c'est le bon champ, sinon retirez l'image */}\r\n+                {profile?.avatarUrl ? (\r\n+                  <AvatarImage\r\n+                    src={profile.avatarUrl}\r\n+                    alt=\"Avatar utilisateur\"\r\n+                  />\r\n                 ) : (\r\n-                  <AvatarFallback>{profile?.first_name?.[0] || '?'}</AvatarFallback>\r\n+                  <AvatarFallback>\r\n+                    {profile?.first_name?.[0] || \"?\"}\r\n+                  </AvatarFallback>\r\n                 )}\r\n               </Avatar>\r\n               <CardTitle className=\"text-xl flex items-center\">\r\n                 <User className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n                 Mon Profil\r\n               </CardTitle>\r\n             </div>\r\n-            <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditingProfile(true)}>\r\n+            <Button\r\n+              variant=\"outline\"\r\n+              size=\"sm\"\r\n+              onClick={() => setIsEditingProfile(true)}\r\n+            >\r\n               Modifier\r\n             </Button>\r\n           </CardHeader>\r\n           <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n@@ -522,13 +183,15 @@\n               <p className=\"font-medium\">{profile?.email}</p>\r\n             </div>\r\n             <div>\r\n               <p className=\"text-sm text-gray-600\">Entreprise</p>\r\n-              <p className=\"font-medium\">{profile?.company_name || 'Non renseigné'}</p>\r\n+              <p className=\"font-medium\">\r\n+                {profile?.company_name || \"Non renseigné\"}\r\n+              </p>\r\n             </div>\r\n             <div>\r\n               <p className=\"text-sm text-gray-600\">Téléphone</p>\r\n-              <p className=\"font-medium\">{profile?.phone || 'Non renseigné'}</p>\r\n+              <p className=\"font-medium\">{profile?.phone || \"Non renseigné\"}</p>\r\n             </div>\r\n           </CardContent>\r\n         </Card>\r\n \r\n@@ -580,13 +243,13 @@\n           </CardHeader>\r\n           <CardContent className=\"space-y-6\">\r\n             {userServices.length > 0 ? (\r\n               <>\r\n-                {[ \r\n-                  { title: 'Domiciliation', data: domiciliationServices },\r\n-                  { title: 'Admin', data: adminServices },\r\n-                  { title: 'Marketing', data: marketingServices },\r\n-                  { title: 'Complémentaires', data: complementaryServices },\r\n+                {[\r\n+                  { title: \"Domiciliation\", data: domiciliationServices },\r\n+                  { title: \"Admin\", data: adminServices },\r\n+                  { title: \"Marketing\", data: marketingServices },\r\n+                  { title: \"Complémentaires\", data: complementaryServices },\r\n                 ].map(({ title, data }) =>\r\n                   data.length > 0 ? (\r\n                     <div key={title}>\r\n                       <h3 className=\"font-medium mb-2\">{title}</h3>\r\n@@ -603,9 +266,9 @@\n                             <TableRow key={s.id}>\r\n                               <TableCell>{s.name}</TableCell>\r\n                               <TableCell>{getStatusBadge(s.status)}</TableCell>\r\n                               <TableCell>\r\n-                                {s.price != null ? `${s.price} €` : '-'}\r\n+                                {s.price != null ? `${s.price} €` : \"-\"}\r\n                               </TableCell>\r\n                             </TableRow>\r\n                           ))}\r\n                         </TableBody>\r\n@@ -615,9 +278,11 @@\n                 )}\r\n               </>\r\n             ) : (\r\n               <div className=\"text-center py-6\">\r\n-                <p className=\"text-gray-500\">Aucun service actif pour le moment.</p>\r\n+                <p className=\"text-gray-500\">\r\n+                  Aucun service actif pour le moment.\r\n+                </p>\r\n                 <Button variant=\"outline\" className=\"mt-4\" asChild>\r\n                   <a href=\"/domiciliation\">Voir nos offres</a>\r\n                 </Button>\r\n               </div>\r\n@@ -627,8 +292,8 @@\n       </main>\r\n \r\n       <Footer />\r\n     </div>\r\n-  )\r\n-}\r\n+  );\r\n+};\r\n \r\n-export default Dashboard\r\n+export default Dashboard;\r\n"
                },
                {
                    "date": 1747586864136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,361 @@\n-// src/components/dashboard/Dashboard.tsx\r\n+// import React, { useEffect, useState } from 'react';\r\n+// import { useNavigate } from 'react-router-dom';\r\n+// import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n+// import { Button } from '@/components/ui/button';\r\n+// import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\n+// import { Badge } from '@/components/ui/badge';\r\n+// import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '@/components/ui/table';\r\n+// import { useUserData } from '@/hooks/useUserData';\r\n+// import { supabase } from '@/integrations/supabase/client';\r\n+// import { toast } from '@/components/ui/use-toast';\r\n+// import Navbar from '@/components/Navbar';\r\n+// import Footer from '@/components/Footer';\r\n+// import ProfileEditForm from '@/components/dashboard/ProfileEditForm';\r\n+// import { format } from 'date-fns';\r\n+// import { fr } from 'date-fns/locale';\r\n+// import { Calendar, User, ShoppingCart, List } from 'lucide-react';\r\n+\r\n+// const Dashboard: React.FC = () => {\r\n+//   const navigate = useNavigate();\r\n+//   const [loading, setLoading] = useState(true);\r\n+//   const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n+\r\n+//   const {\r\n+//     profile,\r\n+//     domiciliation,\r\n+//     userServices,\r\n+//     loading: userDataLoading,\r\n+//     updateProfile,\r\n+//     error\r\n+//   } = useUserData();\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkUser = async () => {\r\n+//       try {\r\n+//         const { data: { session } } = await supabase.auth.getSession();\r\n+\r\n+//         if (!session) {\r\n+//           toast({\r\n+//             title: \"Accès non autorisé\",\r\n+//             description: \"Veuillez vous connecter pour accéder à votre tableau de bord\",\r\n+//             variant: \"destructive\"\r\n+//           });\r\n+//           navigate('/login');\r\n+//           return;\r\n+//         }\r\n+//       } catch (error) {\r\n+//         console.error('Error checking auth status:', error);\r\n+//         navigate('/login');\r\n+//       } finally {\r\n+//         setLoading(false);\r\n+//       }\r\n+//     };\r\n+\r\n+//     checkUser();\r\n+\r\n+//     const { data: authListener } = supabase.auth.onAuthStateChange(\r\n+//       (event, session) => {\r\n+//         if (event === 'SIGNED_OUT') {\r\n+//           navigate('/login');\r\n+//         }\r\n+//       }\r\n+//     );\r\n+\r\n+//     return () => {\r\n+//       authListener.subscription.unsubscribe();\r\n+//     };\r\n+//   }, [navigate]);\r\n+\r\n+//   if (loading || userDataLoading) {\r\n+//     return (\r\n+//       <div className=\"flex items-center justify-center h-screen\">\r\n+//         <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-lysco-turquoise\"></div>\r\n+//       </div>\r\n+//     );\r\n+//   }\r\n+\r\n+//   if (error) {\r\n+//     return (\r\n+//       <div className=\"flex flex-col items-center justify-center h-screen\">\r\n+//         <p className=\"text-red-500 text-xl mb-4\">Une erreur est survenue lors du chargement de vos données</p>\r\n+//         <Button onClick={() => navigate('/login')}>Retourner à l'accueil</Button>\r\n+//       </div>\r\n+//     );\r\n+//   }\r\n+\r\n+//   const formatDate = (dateString: string): string => {\r\n+//     try {\r\n+//       const date = new Date(dateString);\r\n+//       return format(date, 'dd/MM/yyyy', { locale: fr });\r\n+//     } catch (e) {\r\n+//       return dateString;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const getStatusBadge = (status: string) => {\r\n+//     if (status === 'active') {\r\n+//       return <Badge className=\"bg-green-500\">Actif</Badge>;\r\n+//     } else if (status === 'option') {\r\n+//       return <Badge className=\"bg-amber-500\">En option</Badge>;\r\n+//     } else if (status === 'pending') {\r\n+//       return <Badge className=\"bg-blue-500\">En attente</Badge>;\r\n+//     } else {\r\n+//       return <Badge className=\"bg-gray-500\">{status}</Badge>;\r\n+//     }\r\n+//   };\r\n+\r\n+//   if (isEditingProfile) {\r\n+//     return (\r\n+//       <div className=\"flex flex-col min-h-screen\">\r\n+//         <Navbar />\r\n+//         <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n+//           <ProfileEditForm\r\n+//             profile={profile}\r\n+//             onUpdate={updateProfile}\r\n+//             onCancel={() => setIsEditingProfile(false)}\r\n+//           />\r\n+//         </main>\r\n+//         <Footer />\r\n+//       </div>\r\n+//     );\r\n+//   }\r\n+\r\n+//   // Filtrer les services par catégorie\r\n+//   const domiciliationServices = userServices.filter(service => service.category === 'domiciliation');\r\n+//   const adminServices = userServices.filter(service => service.category === 'admin');\r\n+//   const marketingServices = userServices.filter(service => service.category === 'marketing');\r\n+//   const complementaryServices = userServices.filter(service => service.category === 'complementary');\r\n+\r\n+//   return (\r\n+//     <div className=\"flex flex-col min-h-screen\">\r\n+//       <Navbar />\r\n+\r\n+//       <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n+//         <div className=\"mb-8\">\r\n+//           <h1 className=\"text-3xl font-bold\">Tableau de bord</h1>\r\n+//           <p className=\"text-gray-600\">Bienvenue sur votre espace personnel Lys&Co, {profile?.first_name || profile?.email}</p>\r\n+//         </div>\r\n+\r\n+//         <div className=\"grid grid-cols-1 gap-8\">\r\n+//           {/* Profil utilisateur */}\r\n+//           <Card>\r\n+//             <CardHeader className=\"flex flex-row items-center justify-between\">\r\n+//               <CardTitle className=\"text-xl flex items-center\">\r\n+//                 <User className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n+//                 Mon Profil\r\n+//               </CardTitle>\r\n+//               <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditingProfile(true)}>\r\n+//                 Modifier mon profil\r\n+//               </Button>\r\n+//             </CardHeader>\r\n+//             <CardContent>\r\n+//               <div className=\"flex flex-col md:flex-row gap-6\">\r\n+//                 <div className=\"flex-1 space-y-3\">\r\n+//                   <div>\r\n+//                     <p className=\"text-sm text-gray-600\">Nom</p>\r\n+//                     <p className=\"font-medium\">{profile?.first_name} {profile?.last_name}</p>\r\n+//                   </div>\r\n+//                   <div>\r\n+//                     <p className=\"text-sm text-gray-600\">Email</p>\r\n+//                     <p className=\"font-medium\">{profile?.email}</p>\r\n+//                   </div>\r\n+//                 </div>\r\n+//                 <div className=\"flex-1 space-y-3\">\r\n+//                   <div>\r\n+//                     <p className=\"text-sm text-gray-600\">Entreprise</p>\r\n+//                     <p className=\"font-medium\">{profile?.company_name || 'Non renseigné'}</p>\r\n+//                   </div>\r\n+//                   <div>\r\n+//                     <p className=\"text-sm text-gray-600\">Téléphone</p>\r\n+//                     <p className=\"font-medium\">{profile?.phone || 'Non renseigné'}</p>\r\n+//                   </div>\r\n+//                 </div>\r\n+//               </div>\r\n+//             </CardContent>\r\n+//           </Card>\r\n+\r\n+//           {/* Domiciliation */}\r\n+//           {domiciliation && (\r\n+//             <Card>\r\n+//               <CardHeader>\r\n+//                 <CardTitle className=\"text-xl flex items-center\">\r\n+//                   <Calendar className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n+//                   Domiciliation\r\n+//                 </CardTitle>\r\n+//               </CardHeader>\r\n+//               <CardContent>\r\n+//                 <div className=\"mb-4\">\r\n+//                   <p className=\"text-sm text-gray-600\">Adresse</p>\r\n+//                   <p className=\"font-medium\">{domiciliation.address}</p>\r\n+//                 </div>\r\n+//                 <div className=\"flex flex-col md:flex-row gap-6\">\r\n+//                   <div className=\"flex-1 space-y-3\">\r\n+//                     <div>\r\n+//                       <p className=\"text-sm text-gray-600\">Statut</p>\r\n+//                       <p className={`font-medium ${\r\n+//                         domiciliation.status === 'active' ? 'text-green-600' :\r\n+//                         domiciliation.status === 'pending' ? 'text-amber-600' : 'text-gray-600'\r\n+//                       }`}>\r\n+//                         {domiciliation.status === 'active' ? 'Actif' :\r\n+//                          domiciliation.status === 'pending' ? 'En attente' : 'Inactif'}\r\n+//                       </p>\r\n+//                     </div>\r\n+//                     {domiciliation.renewal_date && (\r\n+//                       <div>\r\n+//                         <p className=\"text-sm text-gray-600\">Renouvellement</p>\r\n+//                         <p className=\"font-medium\">{formatDate(domiciliation.renewal_date)}</p>\r\n+//                       </div>\r\n+//                     )}\r\n+//                   </div>\r\n+//                   <div className=\"flex-1 space-y-3\">\r\n+//                     {domiciliation.plan_type && (\r\n+//                       <div>\r\n+//                         <p className=\"text-sm text-gray-600\">Type de plan</p>\r\n+//                         <p className=\"font-medium\">{domiciliation.plan_type}</p>\r\n+//                       </div>\r\n+//                     )}\r\n+//                     {domiciliation.duration && (\r\n+//                       <div>\r\n+//                         <p className=\"text-sm text-gray-600\">Durée</p>\r\n+//                         <p className=\"font-medium\">{domiciliation.duration}</p>\r\n+//                       </div>\r\n+//                     )}\r\n+//                   </div>\r\n+//                 </div>\r\n+//               </CardContent>\r\n+//             </Card>\r\n+//           )}\r\n+\r\n+//           {/* Services achetés */}\r\n+//           <Card>\r\n+//             <CardHeader>\r\n+//               <CardTitle className=\"text-xl flex items-center\">\r\n+//                 <ShoppingCart className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n+//                 Services achetés\r\n+//               </CardTitle>\r\n+//             </CardHeader>\r\n+//             <CardContent>\r\n+//               {userServices.length > 0 ? (\r\n+//                 <div className=\"space-y-6\">\r\n+//                   {domiciliationServices.length > 0 && (\r\n+//                     <div>\r\n+//                       <h3 className=\"font-medium mb-2\">Services de domiciliation</h3>\r\n+//                       <Table>\r\n+//                         <TableHeader>\r\n+//                           <TableRow>\r\n+//                             <TableHead>Service</TableHead>\r\n+//                             <TableHead>Statut</TableHead>\r\n+//                             <TableHead>Prix</TableHead>\r\n+//                           </TableRow>\r\n+//                         </TableHeader>\r\n+//                         <TableBody>\r\n+//                           {domiciliationServices.map(service => (\r\n+//                             <TableRow key={service.id}>\r\n+//                               <TableCell>{service.name}</TableCell>\r\n+//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n+//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n+//                             </TableRow>\r\n+//                           ))}\r\n+//                         </TableBody>\r\n+//                       </Table>\r\n+//                     </div>\r\n+//                   )}\r\n+\r\n+//                   {adminServices.length > 0 && (\r\n+//                     <div>\r\n+//                       <h3 className=\"font-medium mb-2\">Services administratifs</h3>\r\n+//                       <Table>\r\n+//                         <TableHeader>\r\n+//                           <TableRow>\r\n+//                             <TableHead>Service</TableHead>\r\n+//                             <TableHead>Statut</TableHead>\r\n+//                             <TableHead>Prix</TableHead>\r\n+//                           </TableRow>\r\n+//                         </TableHeader>\r\n+//                         <TableBody>\r\n+//                           {adminServices.map(service => (\r\n+//                             <TableRow key={service.id}>\r\n+//                               <TableCell>{service.name}</TableCell>\r\n+//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n+//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n+//                             </TableRow>\r\n+//                           ))}\r\n+//                         </TableBody>\r\n+//                       </Table>\r\n+//                     </div>\r\n+//                   )}\r\n+\r\n+//                   {marketingServices.length > 0 && (\r\n+//                     <div>\r\n+//                       <h3 className=\"font-medium mb-2\">Services marketing</h3>\r\n+//                       <Table>\r\n+//                         <TableHeader>\r\n+//                           <TableRow>\r\n+//                             <TableHead>Service</TableHead>\r\n+//                             <TableHead>Statut</TableHead>\r\n+//                             <TableHead>Prix</TableHead>\r\n+//                           </TableRow>\r\n+//                         </TableHeader>\r\n+//                         <TableBody>\r\n+//                           {marketingServices.map(service => (\r\n+//                             <TableRow key={service.id}>\r\n+//                               <TableCell>{service.name}</TableCell>\r\n+//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n+//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n+//                             </TableRow>\r\n+//                           ))}\r\n+//                         </TableBody>\r\n+//                       </Table>\r\n+//                     </div>\r\n+//                   )}\r\n+\r\n+//                   {complementaryServices.length > 0 && (\r\n+//                     <div>\r\n+//                       <h3 className=\"font-medium mb-2\">Services complémentaires</h3>\r\n+//                       <Table>\r\n+//                         <TableHeader>\r\n+//                           <TableRow>\r\n+//                             <TableHead>Service</TableHead>\r\n+//                             <TableHead>Statut</TableHead>\r\n+//                             <TableHead>Prix</TableHead>\r\n+//                           </TableRow>\r\n+//                         </TableHeader>\r\n+//                         <TableBody>\r\n+//                           {complementaryServices.map(service => (\r\n+//                             <TableRow key={service.id}>\r\n+//                               <TableCell>{service.name}</TableCell>\r\n+//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n+//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n+//                             </TableRow>\r\n+//                           ))}\r\n+//                         </TableBody>\r\n+//                       </Table>\r\n+//                     </div>\r\n+//                   )}\r\n+//                 </div>\r\n+//               ) : (\r\n+//                 <div className=\"text-center py-6\">\r\n+//                   <p className=\"text-gray-500\">Vous n'avez pas encore de services actifs.</p>\r\n+//                   <Button variant=\"outline\" className=\"mt-4\" asChild>\r\n+//                     <a href=\"/domiciliation\">Voir nos offres</a>\r\n+//                   </Button>\r\n+//                 </div>\r\n+//               )}\r\n+//             </CardContent>\r\n+//           </Card>\r\n+\r\n+//           {/* TODO: Ajouter la section Réservations quand celle-ci sera implémentée */}\r\n+//         </div>\r\n+//       </main>\r\n+\r\n+//       <Footer />\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Dashboard;\r\n+\r\n import React, { useEffect, useState } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n import { Button } from \"@/components/ui/button\";\r\n"
                }
            ],
            "date": 1747586728327,
            "name": "Commit-0",
            "content": "\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n// import { Button } from '@/components/ui/button';\r\n// import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\n// import { Badge } from '@/components/ui/badge';\r\n// import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '@/components/ui/table';\r\n// import { useUserData } from '@/hooks/useUserData';\r\n// import { supabase } from '@/integrations/supabase/client';\r\n// import { toast } from '@/components/ui/use-toast';\r\n// import Navbar from '@/components/Navbar';\r\n// import Footer from '@/components/Footer';\r\n// import ProfileEditForm from '@/components/dashboard/ProfileEditForm';\r\n// import { format } from 'date-fns';\r\n// import { fr } from 'date-fns/locale';\r\n// import { Calendar, User, ShoppingCart, List } from 'lucide-react';\r\n\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   const navigate = useNavigate();\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n  \r\n//   const { \r\n//     profile, \r\n//     domiciliation, \r\n//     userServices, \r\n//     loading: userDataLoading, \r\n//     updateProfile,\r\n//     error\r\n//   } = useUserData();\r\n\r\n//   useEffect(() => {\r\n//     const checkUser = async () => {\r\n//       try {\r\n//         const { data: { session } } = await supabase.auth.getSession();\r\n        \r\n//         if (!session) {\r\n//           toast({\r\n//             title: \"Accès non autorisé\",\r\n//             description: \"Veuillez vous connecter pour accéder à votre tableau de bord\",\r\n//             variant: \"destructive\"\r\n//           });\r\n//           navigate('/login');\r\n//           return;\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error checking auth status:', error);\r\n//         navigate('/login');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     checkUser();\r\n\r\n//     const { data: authListener } = supabase.auth.onAuthStateChange(\r\n//       (event, session) => {\r\n//         if (event === 'SIGNED_OUT') {\r\n//           navigate('/login');\r\n//         }\r\n//       }\r\n//     );\r\n\r\n//     return () => {\r\n//       authListener.subscription.unsubscribe();\r\n//     };\r\n//   }, [navigate]);\r\n\r\n//   if (loading || userDataLoading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-screen\">\r\n//         <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-lysco-turquoise\"></div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div className=\"flex flex-col items-center justify-center h-screen\">\r\n//         <p className=\"text-red-500 text-xl mb-4\">Une erreur est survenue lors du chargement de vos données</p>\r\n//         <Button onClick={() => navigate('/login')}>Retourner à l'accueil</Button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   const formatDate = (dateString: string): string => {\r\n//     try {\r\n//       const date = new Date(dateString);\r\n//       return format(date, 'dd/MM/yyyy', { locale: fr });\r\n//     } catch (e) {\r\n//       return dateString;\r\n//     }\r\n//   };\r\n\r\n//   const getStatusBadge = (status: string) => {\r\n//     if (status === 'active') {\r\n//       return <Badge className=\"bg-green-500\">Actif</Badge>;\r\n//     } else if (status === 'option') {\r\n//       return <Badge className=\"bg-amber-500\">En option</Badge>;\r\n//     } else if (status === 'pending') {\r\n//       return <Badge className=\"bg-blue-500\">En attente</Badge>;\r\n//     } else {\r\n//       return <Badge className=\"bg-gray-500\">{status}</Badge>;\r\n//     }\r\n//   };\r\n\r\n//   if (isEditingProfile) {\r\n//     return (\r\n//       <div className=\"flex flex-col min-h-screen\">\r\n//         <Navbar />\r\n//         <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n//           <ProfileEditForm \r\n//             profile={profile} \r\n//             onUpdate={updateProfile} \r\n//             onCancel={() => setIsEditingProfile(false)} \r\n//           />\r\n//         </main>\r\n//         <Footer />\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Filtrer les services par catégorie\r\n//   const domiciliationServices = userServices.filter(service => service.category === 'domiciliation');\r\n//   const adminServices = userServices.filter(service => service.category === 'admin');\r\n//   const marketingServices = userServices.filter(service => service.category === 'marketing');\r\n//   const complementaryServices = userServices.filter(service => service.category === 'complementary');\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col min-h-screen\">\r\n//       <Navbar />\r\n      \r\n//       <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n//         <div className=\"mb-8\">\r\n//           <h1 className=\"text-3xl font-bold\">Tableau de bord</h1>\r\n//           <p className=\"text-gray-600\">Bienvenue sur votre espace personnel Lys&Co, {profile?.first_name || profile?.email}</p>\r\n//         </div>\r\n        \r\n//         <div className=\"grid grid-cols-1 gap-8\">\r\n//           {/* Profil utilisateur */}\r\n//           <Card>\r\n//             <CardHeader className=\"flex flex-row items-center justify-between\">\r\n//               <CardTitle className=\"text-xl flex items-center\">\r\n//                 <User className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n//                 Mon Profil\r\n//               </CardTitle>\r\n//               <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditingProfile(true)}>\r\n//                 Modifier mon profil\r\n//               </Button>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               <div className=\"flex flex-col md:flex-row gap-6\">\r\n//                 <div className=\"flex-1 space-y-3\">\r\n//                   <div>\r\n//                     <p className=\"text-sm text-gray-600\">Nom</p>\r\n//                     <p className=\"font-medium\">{profile?.first_name} {profile?.last_name}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <p className=\"text-sm text-gray-600\">Email</p>\r\n//                     <p className=\"font-medium\">{profile?.email}</p>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"flex-1 space-y-3\">\r\n//                   <div>\r\n//                     <p className=\"text-sm text-gray-600\">Entreprise</p>\r\n//                     <p className=\"font-medium\">{profile?.company_name || 'Non renseigné'}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <p className=\"text-sm text-gray-600\">Téléphone</p>\r\n//                     <p className=\"font-medium\">{profile?.phone || 'Non renseigné'}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           {/* Domiciliation */}\r\n//           {domiciliation && (\r\n//             <Card>\r\n//               <CardHeader>\r\n//                 <CardTitle className=\"text-xl flex items-center\">\r\n//                   <Calendar className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n//                   Domiciliation\r\n//                 </CardTitle>\r\n//               </CardHeader>\r\n//               <CardContent>\r\n//                 <div className=\"mb-4\">\r\n//                   <p className=\"text-sm text-gray-600\">Adresse</p>\r\n//                   <p className=\"font-medium\">{domiciliation.address}</p>\r\n//                 </div>\r\n//                 <div className=\"flex flex-col md:flex-row gap-6\">\r\n//                   <div className=\"flex-1 space-y-3\">\r\n//                     <div>\r\n//                       <p className=\"text-sm text-gray-600\">Statut</p>\r\n//                       <p className={`font-medium ${\r\n//                         domiciliation.status === 'active' ? 'text-green-600' : \r\n//                         domiciliation.status === 'pending' ? 'text-amber-600' : 'text-gray-600'\r\n//                       }`}>\r\n//                         {domiciliation.status === 'active' ? 'Actif' : \r\n//                          domiciliation.status === 'pending' ? 'En attente' : 'Inactif'}\r\n//                       </p>\r\n//                     </div>\r\n//                     {domiciliation.renewal_date && (\r\n//                       <div>\r\n//                         <p className=\"text-sm text-gray-600\">Renouvellement</p>\r\n//                         <p className=\"font-medium\">{formatDate(domiciliation.renewal_date)}</p>\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"flex-1 space-y-3\">\r\n//                     {domiciliation.plan_type && (\r\n//                       <div>\r\n//                         <p className=\"text-sm text-gray-600\">Type de plan</p>\r\n//                         <p className=\"font-medium\">{domiciliation.plan_type}</p>\r\n//                       </div>\r\n//                     )}\r\n//                     {domiciliation.duration && (\r\n//                       <div>\r\n//                         <p className=\"text-sm text-gray-600\">Durée</p>\r\n//                         <p className=\"font-medium\">{domiciliation.duration}</p>\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               </CardContent>\r\n//             </Card>\r\n//           )}\r\n\r\n//           {/* Services achetés */}\r\n//           <Card>\r\n//             <CardHeader>\r\n//               <CardTitle className=\"text-xl flex items-center\">\r\n//                 <ShoppingCart className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n//                 Services achetés\r\n//               </CardTitle>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               {userServices.length > 0 ? (\r\n//                 <div className=\"space-y-6\">\r\n//                   {domiciliationServices.length > 0 && (\r\n//                     <div>\r\n//                       <h3 className=\"font-medium mb-2\">Services de domiciliation</h3>\r\n//                       <Table>\r\n//                         <TableHeader>\r\n//                           <TableRow>\r\n//                             <TableHead>Service</TableHead>\r\n//                             <TableHead>Statut</TableHead>\r\n//                             <TableHead>Prix</TableHead>\r\n//                           </TableRow>\r\n//                         </TableHeader>\r\n//                         <TableBody>\r\n//                           {domiciliationServices.map(service => (\r\n//                             <TableRow key={service.id}>\r\n//                               <TableCell>{service.name}</TableCell>\r\n//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n//                             </TableRow>\r\n//                           ))}\r\n//                         </TableBody>\r\n//                       </Table>\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {adminServices.length > 0 && (\r\n//                     <div>\r\n//                       <h3 className=\"font-medium mb-2\">Services administratifs</h3>\r\n//                       <Table>\r\n//                         <TableHeader>\r\n//                           <TableRow>\r\n//                             <TableHead>Service</TableHead>\r\n//                             <TableHead>Statut</TableHead>\r\n//                             <TableHead>Prix</TableHead>\r\n//                           </TableRow>\r\n//                         </TableHeader>\r\n//                         <TableBody>\r\n//                           {adminServices.map(service => (\r\n//                             <TableRow key={service.id}>\r\n//                               <TableCell>{service.name}</TableCell>\r\n//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n//                             </TableRow>\r\n//                           ))}\r\n//                         </TableBody>\r\n//                       </Table>\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {marketingServices.length > 0 && (\r\n//                     <div>\r\n//                       <h3 className=\"font-medium mb-2\">Services marketing</h3>\r\n//                       <Table>\r\n//                         <TableHeader>\r\n//                           <TableRow>\r\n//                             <TableHead>Service</TableHead>\r\n//                             <TableHead>Statut</TableHead>\r\n//                             <TableHead>Prix</TableHead>\r\n//                           </TableRow>\r\n//                         </TableHeader>\r\n//                         <TableBody>\r\n//                           {marketingServices.map(service => (\r\n//                             <TableRow key={service.id}>\r\n//                               <TableCell>{service.name}</TableCell>\r\n//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n//                             </TableRow>\r\n//                           ))}\r\n//                         </TableBody>\r\n//                       </Table>\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {complementaryServices.length > 0 && (\r\n//                     <div>\r\n//                       <h3 className=\"font-medium mb-2\">Services complémentaires</h3>\r\n//                       <Table>\r\n//                         <TableHeader>\r\n//                           <TableRow>\r\n//                             <TableHead>Service</TableHead>\r\n//                             <TableHead>Statut</TableHead>\r\n//                             <TableHead>Prix</TableHead>\r\n//                           </TableRow>\r\n//                         </TableHeader>\r\n//                         <TableBody>\r\n//                           {complementaryServices.map(service => (\r\n//                             <TableRow key={service.id}>\r\n//                               <TableCell>{service.name}</TableCell>\r\n//                               <TableCell>{getStatusBadge(service.status)}</TableCell>\r\n//                               <TableCell>{service.price ? `${service.price}€` : '-'}</TableCell>\r\n//                             </TableRow>\r\n//                           ))}\r\n//                         </TableBody>\r\n//                       </Table>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"text-center py-6\">\r\n//                   <p className=\"text-gray-500\">Vous n'avez pas encore de services actifs.</p>\r\n//                   <Button variant=\"outline\" className=\"mt-4\" asChild>\r\n//                     <a href=\"/domiciliation\">Voir nos offres</a>\r\n//                   </Button>\r\n//                 </div>\r\n//               )}\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           {/* TODO: Ajouter la section Réservations quand celle-ci sera implémentée */}\r\n//         </div>\r\n//       </main>\r\n      \r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n// src/components/dashboard/Dashboard.tsx\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n} from '@/components/ui/table'\r\nimport { useUserData } from '@/hooks/useUserData'\r\nimport { supabase } from '@/integrations/supabase/client'\r\nimport { toast } from '@/components/ui/use-toast'\r\nimport Navbar from '@/components/Navbar'\r\nimport Footer from '@/components/Footer'\r\nimport ProfileEditForm from '@/components/dashboard/ProfileEditForm'\r\nimport { format } from 'date-fns'\r\nimport { fr } from 'date-fns/locale'\r\nimport { Calendar, User, ShoppingCart } from 'lucide-react'\r\nimport DashboardOverview from '@/components/dashboard/DashboardOverview'\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const [loading, setLoading] = useState(true)\r\n  const [isEditingProfile, setIsEditingProfile] = useState(false)\r\n\r\n  const {\r\n    profile,\r\n    domiciliation,\r\n    userServices,\r\n    loading: userDataLoading,\r\n    updateProfile,\r\n    error,\r\n  } = useUserData()\r\n\r\n  // Vérification de session Supabase\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      const {\r\n        data: { session },\r\n      } = await supabase.auth.getSession()\r\n      if (!session) {\r\n        toast({\r\n          title: 'Accès non autorisé',\r\n          description: 'Veuillez vous connecter pour accéder à votre tableau de bord',\r\n          variant: 'destructive',\r\n        })\r\n        navigate('/login')\r\n      }\r\n      setLoading(false)\r\n    }\r\n    checkUser()\r\n    const { data: authListener } = supabase.auth.onAuthStateChange((event) => {\r\n      if (event === 'SIGNED_OUT') navigate('/login')\r\n    })\r\n    return () => {\r\n      authListener.subscription.unsubscribe()\r\n    }\r\n  }, [navigate])\r\n\r\n  if (loading || userDataLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-lysco-turquoise\" />\r\n      </div>\r\n    )\r\n  }\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen\">\r\n        <p className=\"text-red-500 text-xl mb-4\">\r\n          Une erreur est survenue lors du chargement de vos données\r\n        </p>\r\n        <Button onClick={() => navigate('/login')}>Retourner à l’accueil</Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const formatDate = (dateString: string) => {\r\n    try {\r\n      return format(new Date(dateString), 'dd/MM/yyyy', { locale: fr })\r\n    } catch {\r\n      return dateString\r\n    }\r\n  }\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <Badge className=\"bg-green-500\">Actif</Badge>\r\n      case 'pending':\r\n        return <Badge className=\"bg-blue-500\">En attente</Badge>\r\n      case 'option':\r\n        return <Badge className=\"bg-amber-500\">En option</Badge>\r\n      default:\r\n        return <Badge className=\"bg-gray-500\">{status}</Badge>\r\n    }\r\n  }\r\n\r\n  if (isEditingProfile) {\r\n    return (\r\n      <div className=\"flex flex-col min-h-screen\">\r\n        <Navbar />\r\n        <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n          <ProfileEditForm\r\n            profile={profile}\r\n            onUpdate={updateProfile}\r\n            onCancel={() => setIsEditingProfile(false)}\r\n          />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Catégorisation des services\r\n  const domiciliationServices = userServices.filter((s) => s.category === 'domiciliation')\r\n  const adminServices = userServices.filter((s) => s.category === 'admin')\r\n  const marketingServices = userServices.filter((s) => s.category === 'marketing')\r\n  const complementaryServices = userServices.filter((s) => s.category === 'complementary')\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Navbar />\r\n\r\n      <main className=\"flex-1 container mx-auto px-4 py-8 space-y-8\">\r\n        {/* 1. Section Vue d'ensemble interactive */}\r\n        <DashboardOverview />\r\n\r\n        {/* 2. Profil utilisateur */}\r\n        <Card>\r\n          <CardHeader className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <Avatar>\r\n                {profile?.avatar_url ? (\r\n                  <AvatarImage src={profile.avatar_url} alt=\"Avatar utilisateur\" />\r\n                ) : (\r\n                  <AvatarFallback>{profile?.first_name?.[0] || '?'}</AvatarFallback>\r\n                )}\r\n              </Avatar>\r\n              <CardTitle className=\"text-xl flex items-center\">\r\n                <User className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n                Mon Profil\r\n              </CardTitle>\r\n            </div>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditingProfile(true)}>\r\n              Modifier\r\n            </Button>\r\n          </CardHeader>\r\n          <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Nom</p>\r\n              <p className=\"font-medium\">\r\n                {profile?.first_name} {profile?.last_name}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Email</p>\r\n              <p className=\"font-medium\">{profile?.email}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Entreprise</p>\r\n              <p className=\"font-medium\">{profile?.company_name || 'Non renseigné'}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Téléphone</p>\r\n              <p className=\"font-medium\">{profile?.phone || 'Non renseigné'}</p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* 3. Domiciliation */}\r\n        {domiciliation && (\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl flex items-center\">\r\n                <Calendar className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n                Domiciliation\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Adresse</p>\r\n                <p className=\"font-medium\">{domiciliation.address}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Statut</p>\r\n                <div className=\"font-medium\">\r\n                  {getStatusBadge(domiciliation.status)}\r\n                </div>\r\n              </div>\r\n              {domiciliation.renewal_date && (\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Renouvellement</p>\r\n                  <p className=\"font-medium\">\r\n                    {formatDate(domiciliation.renewal_date)}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {domiciliation.plan_type && (\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Type de plan</p>\r\n                  <p className=\"font-medium\">{domiciliation.plan_type}</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* 4. Services achetés */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl flex items-center\">\r\n              <ShoppingCart className=\"mr-2 h-5 w-5 text-lysco-turquoise\" />\r\n              Services achetés\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {userServices.length > 0 ? (\r\n              <>\r\n                {[ \r\n                  { title: 'Domiciliation', data: domiciliationServices },\r\n                  { title: 'Admin', data: adminServices },\r\n                  { title: 'Marketing', data: marketingServices },\r\n                  { title: 'Complémentaires', data: complementaryServices },\r\n                ].map(({ title, data }) =>\r\n                  data.length > 0 ? (\r\n                    <div key={title}>\r\n                      <h3 className=\"font-medium mb-2\">{title}</h3>\r\n                      <Table>\r\n                        <TableHeader>\r\n                          <TableRow>\r\n                            <TableHead>Service</TableHead>\r\n                            <TableHead>Statut</TableHead>\r\n                            <TableHead>Prix</TableHead>\r\n                          </TableRow>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                          {data.map((s) => (\r\n                            <TableRow key={s.id}>\r\n                              <TableCell>{s.name}</TableCell>\r\n                              <TableCell>{getStatusBadge(s.status)}</TableCell>\r\n                              <TableCell>\r\n                                {s.price != null ? `${s.price} €` : '-'}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center py-6\">\r\n                <p className=\"text-gray-500\">Aucun service actif pour le moment.</p>\r\n                <Button variant=\"outline\" className=\"mt-4\" asChild>\r\n                  <a href=\"/domiciliation\">Voir nos offres</a>\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </main>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"
        }
    ]
}